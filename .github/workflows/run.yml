name: Generate Apple CN File

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 22 * * *"
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # 准备工作目录
      - name: Prepare working directory
        run: |
          mkdir -p ./output
        shell: bash

      # 下载 GeoSite 文件并提取 Apple 规则
      - name: Generate apple-cn.txt
        run: |
          TMPDIR=$(mktemp -d)
          curl --connect-timeout 5 -m 60 -kfSL -o "$TMPDIR/geosite.dat" "https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat"
          curl -fSL -o ./v2dat "https://raw.githubusercontent.com/xukecheng/scripts/main/v2dat"
          chmod +x ./v2dat
          ./v2dat unpack geosite -o ./output/ -f apple "$TMPDIR/geosite.dat"
          mv ./output/geosite_apple.txt ./output/apple-cn.txt
          rm -rf ./v2dat "$TMPDIR"
        shell: bash

      # 上传生成的文件到 GitHub Release 并提供固定 URL
      - name: Publish apple-cn.txt
        uses: actions/upload-artifact@v3
        with:
          name: apple-cn
          path: ./output/apple-cn.txt

      # 将文件推送到固定的 release 分支以提供下载地址
      - name: Push file to release branch
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          mv ./output/apple-cn.txt ./apple-cn.txt
          git add apple-cn.txt
          git commit -m "Update apple-cn.txt"
          git push -f "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}" release
